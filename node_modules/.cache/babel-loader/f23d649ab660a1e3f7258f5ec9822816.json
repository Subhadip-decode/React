{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\Project\\\\reactprac\\\\ecom\\\\react-e-commerce-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"E:\\\\Project\\\\reactprac\\\\ecom\\\\react-e-commerce-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"E:\\\\Project\\\\reactprac\\\\ecom\\\\react-e-commerce-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nvar config = {\n  apiKey: \"AIzaSyAfHq_LAVL4gIH8mguL0Dragp1aWFQpWlg\",\n  authDomain: \"ecom-db-f8713.firebaseapp.com\",\n  databaseURL: \"https://ecom-db-f8713.firebaseio.com\",\n  projectId: \"ecom-db-f8713\",\n  storageBucket: \"ecom-db-f8713.appspot.com\",\n  messagingSenderId: \"39362193920\",\n  appId: \"1:39362193920:web:31d9128b6ebb77dc5d86e5\",\n  measurementId: \"G-E4NJ30JCLD\"\n};\nexport var createUserProfileDocument = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth, additionalData) {\n    var userRef, snapShot, displayName, email, createdAt;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (userAuth) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n            _context.next = 5;\n            return userRef.get();\n\n          case 5:\n            snapShot = _context.sent;\n\n            if (snapShot.exists) {\n              _context.next = 17;\n              break;\n            }\n\n            displayName = userAuth.displayName, email = userAuth.email;\n            createdAt = new Date();\n            _context.prev = 9;\n            _context.next = 12;\n            return userRef.set(_objectSpread({\n              displayName: displayName,\n              email: email,\n              createdAt: createdAt\n            }, additionalData));\n\n          case 12:\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](9);\n            console.log(\"error creating user\", _context.t0.message);\n\n          case 17:\n            return _context.abrupt(\"return\", userRef);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 14]]);\n  }));\n\n  return function createUserProfileDocument(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var addCollectionAndDocuments = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey, objectsToAdd) {\n    var collectionRef, batch;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            collectionRef = firestore.collection(collectionKey); // console.log(collectionRef)\n\n            batch = firestore.batch();\n            objectsToAdd.forEach(function (obj) {\n              var newDocRef = collectionRef.doc(); // console.log(newDocRef)\n\n              batch.set(newDocRef, obj);\n            });\n            _context2.next = 5;\n            return batch.commit();\n\n          case 5:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function addCollectionAndDocuments(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var convertCollectionsSnapshotToMap = function convertCollectionsSnapshotToMap(collections) {\n  var transformedCollections = collections.docs.map(function (doc) {\n    var _doc$data = doc.data(),\n        title = _doc$data.title,\n        items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title: title,\n      items: items\n    };\n  });\n  return transformedCollections.reduce(function (accumulator, collection) {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nfirebase.initializeApp(config);\nexport var auth = firebase.auth();\nexport var firestore = firebase.firestore(); //google authentication\n\nvar provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport var signInWithGoogle = function signInWithGoogle() {\n  auth.signInWithPopup(provider);\n};\nexport default firebase;","map":{"version":3,"sources":["E:/Project/reactprac/ecom/react-e-commerce-website/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollections","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyAfHq_LAVL4gIH8mguL0Dragp1aWFQpWlg\",\r\n    authDomain: \"ecom-db-f8713.firebaseapp.com\",\r\n    databaseURL: \"https://ecom-db-f8713.firebaseio.com\",\r\n    projectId: \"ecom-db-f8713\",\r\n    storageBucket: \"ecom-db-f8713.appspot.com\",\r\n    messagingSenderId: \"39362193920\",\r\n    appId: \"1:39362193920:web:31d9128b6ebb77dc5d86e5\",\r\n    measurementId: \"G-E4NJ30JCLD\"\r\n}\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return\r\n\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n    const snapShot = await userRef.get()\r\n    // console.log(snapShot)\r\n\r\n\r\n    if (!snapShot.exists) {\r\n        const { displayName, email } = userAuth\r\n        const createdAt = new Date()\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            })\r\n        } catch (error) {\r\n            console.log(\"error creating user\", error.message)\r\n        }\r\n    }\r\n    return userRef\r\n}\r\n\r\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\r\n    const collectionRef = firestore.collection(collectionKey)\r\n    // console.log(collectionRef)\r\n    const batch = firestore.batch()\r\n    objectsToAdd.forEach(obj => {\r\n        const newDocRef = collectionRef.doc()\r\n        // console.log(newDocRef)\r\n        batch.set(newDocRef, obj)\r\n    })\r\n    return await batch.commit()\r\n}\r\n\r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n    const transformedCollections = collections.docs.map(doc => {\r\n        const { title, items } = doc.data()\r\n\r\n        return {\r\n            routeName: encodeURI(title.toLowerCase()),\r\n            id: doc.id,\r\n            title,\r\n            items\r\n        }\r\n    })\r\n    return transformedCollections.reduce((accumulator, collection) => {\r\n        accumulator[collection.title.toLowerCase()] = collection\r\n        return accumulator\r\n    }, {})\r\n}\r\n\r\n\r\n\r\n\r\nfirebase.initializeApp(config)\r\n\r\n\r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore()\r\n\r\n//google authentication\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nprovider.setCustomParameters({ prompt: 'select_account' })\r\n\r\nexport const signInWithGoogle = () => {\r\n    auth.signInWithPopup(provider)\r\n}\r\n\r\nexport default firebase"]},"metadata":{},"sourceType":"module"}